@startuml MEMSIM
class Memory {
    - byte[] main_memory
    - int next_allocation_index
    - SafeList[Dict[str, int]] memory_layout

    + swap_in(program: Program): void
    + swap_out(layout_index: int): void
    + get_bytes(): byte[]
    + get_memory_layout(): SafeList[Dict[str, int]]
    + shrink(): void
}

class SafeList <<utility>> {
    + __getitem__(index: int) : Any
}

class Program {
    - byte[] bytes

    + Program(bytes: byte[])
    + stream(): byte[]
}

SafeList --|> list
Memory --> Program : uses
Memory --> SafeList : uses
@enduml