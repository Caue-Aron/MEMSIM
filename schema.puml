@startuml MEMSIM
class Memory {
    - int memory_size
    - Byte[] main_memory
    - SafeList<Segment> memory_layout

    + Memory(size: int)
    + swap_in(program: Program): void
    + swap_out(layout_index: int): void
    + get_bytes(): Byte[]
    + get_memory_layout(): Segment[]
    + get_unallocated_memory(): int
    + shrink(): void
}

class RAM {
    + RAM(memory_size: Byte)
}

class Disc {
    + Disc()
    + expand_disc(size: int)
}

class Byte <<datatype>> {
    + int value {readOnly}
}

class Segment {
    + string type {readOnly}
    + int index {readOnly}
    + int size {readOnly}
}

class OS {
    + OS(ram_size: Byte)
    + load_program_into_ram(program: Program)
    + load_program_into_disc(program: Program)
    + swap_ram_to_disc(program_index: int)
    + swap_disc_to_ram(program_index: int)
    + shrink_ram()
}

class SafeList <<utility>> {
    + __getitem__(index: int): any
    + __repr__() : str
    + pop(index: int): any
}

class Program {
    - Byte[] bytes

    + Program(bytes: int[])
    + stream(): Byte[]
}

OS *-- RAM
OS *-- Disc
Disc --|> Memory
RAM --|> Memory
SafeList --|> list
Memory *-- Byte
Program *-- Byte
Memory *-- Segment
Memory *-- Program
Memory *-- SafeList
@enduml