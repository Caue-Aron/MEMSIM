@startuml MEMSIM
class Memory {
    - int memory_size
    - Byte[] main_memory
    - SafeList<Segment> memory_layout

    + Memory(size: int)
    + swap_in(program: Program): void
    + swap_out(layout_index: int): void
    + get_bytes(): Byte[]
    + get_memory_layout(): Segment[]
    + get_unallocated_memory(): int
    + shrink(): void
}

class Byte <<datatype>> {
    + int value {readOnly}
}

class Segment {
    + string type {readOnly}
    + int index {readOnly}
    + int size {readOnly}
}

class SafeList <<utility>> {
    + __getitem__(index: int) : Any
}

class Program {
    - Byte[] bytes

    + Program(bytes: int[])
    + stream(): Byte[]
}

SafeList --> list : wraps
Memory *-- Program : uses
Memory *-- SafeList : uses
Memory *-- Segment : contains
Memory *-- Byte : contains
Program *-- Byte : contains
@enduml